name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Create dummy google-services.json
      run: |
        cat > android/app/google-services.json << EOF
        {
          "project_info": {
            "project_number": "123456789",
            "project_id": "temp-mail-app",
            "storage_bucket": "temp-mail-app.appspot.com"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:abc123def456",
                "android_client_info": {
                  "package_name": "com.tronics.tempmail.debug"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "AIzaSyDummy_Key_For_Development_Build"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                },
                "ads_service": {
                  "status": 2
                }
              }
            },
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:def456abc123",
                "android_client_info": {
                  "package_name": "com.tronics.tempmail"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "AIzaSyDummy_Key_For_Development_Build"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                },
                "ads_service": {
                  "status": 2
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF
        
    - name: Make Gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' }}
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Build Release APK
      if: ${{ github.event.inputs.build_type == 'release' }}
      run: |
        cd android
        ./gradlew assembleRelease --no-daemon --stacktrace
        
    - name: Upload Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.build_type == 'release' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Get APK info
      run: |
        if [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "Debug APK size: $(du -h android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
          echo "Debug APK path: android/app/build/outputs/apk/debug/app-debug.apk"
        fi
        if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
          echo "Release APK size: $(du -h android/app/build/outputs/apk/release/app-release.apk | cut -f1)"
          echo "Release APK path: android/app/build/outputs/apk/release/app-release.apk"
        fi